on: [push, pull_request,repository_dispatch]

defaults:
  run:
    shell: bash

jobs:
  R:
    name: R
    runs-on: ubuntu-20.04
    env:
      GEN: ninja
      DUCKDB_PATH: ../duckdb/

    steps:
    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: 'devel'

    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Update DuckDB submodule
      run: |
        git config --global --add safe.directory '*'
        make pull

    - name: Install
      env:
        GITHUB_PAT: ${{ github.token }}
      shell: bash
      run: |
        sudo apt-get update -y -qq && sudo apt-get install -y -qq ninja-build libcurl4-openssl-dev
        mkdir -p $HOME/.R
        (cd scripts && R -f dependencies.R)

    - uses: actions/checkout@v3
      with:
        path: ${{ env.DUCKDB_SRC }}

    - uses: actions/checkout@v3
      with:
        repository: ${{ env.DUCKDB_R_REPO }}
        path: ${{ env.DUCKDB_R_SRC }}

      # needed so we can run git commit in vendor.sh
    - name: setup github and create parallel builds
      shell: bash
      run: |
        git config --global user.email "duck@duck.com"
        git config --global user.name "mr. duck"
        mkdir -p ~/.R
        echo 'MAKEFLAGS = -j2' >> ~/.R/Makevars

     # error is from git_dev_version() but does not affect this workflow
    - name: update duckdb-r src code with PR code
      shell: bash
      working-directory: ${{ env.DUCKDB_R_SRC }}
      run:  (cd duckdb-r && ./vendor.sh)

    - name: Build Extension
      run: |
        make release

    - name: Build DuckDB (R)
      run: |
        cd duckdb-r
        R CMD INSTALL .

    - name: Test R
      run: |
        (cd test/r && R -f test_substrait.R)
